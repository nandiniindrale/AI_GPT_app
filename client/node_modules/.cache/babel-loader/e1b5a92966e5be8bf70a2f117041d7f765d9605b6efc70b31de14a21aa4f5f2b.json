{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import toast from \"react-hot-toast\";\n// import axios from \"axios\";\n// import {\n//   Box,\n//   Typography,\n//   useTheme,\n//   useMediaQuery,\n//   TextField,\n//   Button,\n//   Alert,\n//   Collapse,\n//   Card,\n// } from \"@mui/material\";\n\n// const JsConverter = () => {\n//   const theme = useTheme();\n//   const navigate = useNavigate();\n//   //media\n//   const isNotMobile = useMediaQuery(\"(min-width: 1000px)\");\n//   // states\n//   const [text, settext] = useState(\"\");\n//   const [code, setCode] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   //register ctrl\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const { data } = await axios.post(\"/api/v1/openai/js-converter\", {\n//         text,\n//       });\n//       console.log(data);\n//       setCode(data);\n//     } catch (err) {\n//       console.log(error);\n//       if (err.response.data.error) {\n//         setError(err.response.data.error);\n//       } else if (err.message) {\n//         setError(err.message);\n//       }\n//       setTimeout(() => {\n//         setError(\"\");\n//       }, 5000);\n//     }\n//   };\n//   return (\n//     <Box\n//       width={isNotMobile ? \"40%\" : \"80%\"}\n//       p={\"2rem\"}\n//       m={\"2rem auto\"}\n//       borderRadius={5}\n//       sx={{ boxShadow: 5 }}\n//       backgroundColor={theme.palette.background.alt}\n//     >\n//       <Collapse in={error}>\n//         <Alert severity=\"error\" sx={{ mb: 2 }}>\n//           {error}\n//         </Alert>\n//       </Collapse>\n//       <form onSubmit={handleSubmit}>\n//         <Typography variant=\"h3\">JS Converter</Typography>\n\n//         <TextField\n//           placeholder=\"add your text\"\n//           type=\"text\"\n//           multiline={true}\n//           required\n//           margin=\"normal\"\n//           fullWidth\n//           value={text}\n//           onChange={(e) => {\n//             settext(e.target.value);\n//           }}\n//         />\n\n//         <Button\n//           type=\"submit\"\n//           fullWidth\n//           variant=\"contained\"\n//           size=\"large\"\n//           sx={{ color: \"white\", mt: 2 }}\n//         >\n//           Convert\n//         </Button>\n//         <Typography mt={2}>\n//           not this tool ? <Link to=\"/\">GO BACK</Link>\n//         </Typography>\n//       </form>\n\n//       {code ? (\n//         <Card\n//           sx={{\n//             mt: 4,\n//             border: 1,\n//             boxShadow: 0,\n//             height: \"500px\",\n//             borderRadius: 5,\n//             borderColor: \"natural.medium\",\n//             bgcolor: \"background.default\",\n//             overflow: \"auto\",\n//           }}\n//         >\n//           <pre>\n//             <Typography p={2}>{code}</Typography>\n//           </pre>\n//         </Card>\n//       ) : (\n//         <Card\n//           sx={{\n//             mt: 4,\n//             border: 1,\n//             boxShadow: 0,\n//             height: \"500px\",\n//             borderRadius: 5,\n//             borderColor: \"natural.medium\",\n//             bgcolor: \"background.default\",\n//           }}\n//         >\n//           <Typography\n//             variant=\"h5\"\n//             color=\"natural.main\"\n//             sx={{\n//               textAlign: \"center\",\n//               verticalAlign: \"middel\",\n//               lineHeight: \"450px\",\n//             }}\n//           >\n//             Your Code Will Apprea Here\n//           </Typography>\n//         </Card>\n//       )}\n//     </Box>\n//   );\n// };\n\n// export default JsConverter;","map":{"version":3,"names":[],"sources":["C:/Users/sai/Desktop/App/client/src/pages/JsConverter.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import toast from \"react-hot-toast\";\r\n// import axios from \"axios\";\r\n// import {\r\n//   Box,\r\n//   Typography,\r\n//   useTheme,\r\n//   useMediaQuery,\r\n//   TextField,\r\n//   Button,\r\n//   Alert,\r\n//   Collapse,\r\n//   Card,\r\n// } from \"@mui/material\";\r\n\r\n// const JsConverter = () => {\r\n//   const theme = useTheme();\r\n//   const navigate = useNavigate();\r\n//   //media\r\n//   const isNotMobile = useMediaQuery(\"(min-width: 1000px)\");\r\n//   // states\r\n//   const [text, settext] = useState(\"\");\r\n//   const [code, setCode] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   //register ctrl\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const { data } = await axios.post(\"/api/v1/openai/js-converter\", {\r\n//         text,\r\n//       });\r\n//       console.log(data);\r\n//       setCode(data);\r\n//     } catch (err) {\r\n//       console.log(error);\r\n//       if (err.response.data.error) {\r\n//         setError(err.response.data.error);\r\n//       } else if (err.message) {\r\n//         setError(err.message);\r\n//       }\r\n//       setTimeout(() => {\r\n//         setError(\"\");\r\n//       }, 5000);\r\n//     }\r\n//   };\r\n//   return (\r\n//     <Box\r\n//       width={isNotMobile ? \"40%\" : \"80%\"}\r\n//       p={\"2rem\"}\r\n//       m={\"2rem auto\"}\r\n//       borderRadius={5}\r\n//       sx={{ boxShadow: 5 }}\r\n//       backgroundColor={theme.palette.background.alt}\r\n//     >\r\n//       <Collapse in={error}>\r\n//         <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n//           {error}\r\n//         </Alert>\r\n//       </Collapse>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <Typography variant=\"h3\">JS Converter</Typography>\r\n\r\n//         <TextField\r\n//           placeholder=\"add your text\"\r\n//           type=\"text\"\r\n//           multiline={true}\r\n//           required\r\n//           margin=\"normal\"\r\n//           fullWidth\r\n//           value={text}\r\n//           onChange={(e) => {\r\n//             settext(e.target.value);\r\n//           }}\r\n//         />\r\n\r\n//         <Button\r\n//           type=\"submit\"\r\n//           fullWidth\r\n//           variant=\"contained\"\r\n//           size=\"large\"\r\n//           sx={{ color: \"white\", mt: 2 }}\r\n//         >\r\n//           Convert\r\n//         </Button>\r\n//         <Typography mt={2}>\r\n//           not this tool ? <Link to=\"/\">GO BACK</Link>\r\n//         </Typography>\r\n//       </form>\r\n\r\n//       {code ? (\r\n//         <Card\r\n//           sx={{\r\n//             mt: 4,\r\n//             border: 1,\r\n//             boxShadow: 0,\r\n//             height: \"500px\",\r\n//             borderRadius: 5,\r\n//             borderColor: \"natural.medium\",\r\n//             bgcolor: \"background.default\",\r\n//             overflow: \"auto\",\r\n//           }}\r\n//         >\r\n//           <pre>\r\n//             <Typography p={2}>{code}</Typography>\r\n//           </pre>\r\n//         </Card>\r\n//       ) : (\r\n//         <Card\r\n//           sx={{\r\n//             mt: 4,\r\n//             border: 1,\r\n//             boxShadow: 0,\r\n//             height: \"500px\",\r\n//             borderRadius: 5,\r\n//             borderColor: \"natural.medium\",\r\n//             bgcolor: \"background.default\",\r\n//           }}\r\n//         >\r\n//           <Typography\r\n//             variant=\"h5\"\r\n//             color=\"natural.main\"\r\n//             sx={{\r\n//               textAlign: \"center\",\r\n//               verticalAlign: \"middel\",\r\n//               lineHeight: \"450px\",\r\n//             }}\r\n//           >\r\n//             Your Code Will Apprea Here\r\n//           </Typography>\r\n//         </Card>\r\n//       )}\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default JsConverter;"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}