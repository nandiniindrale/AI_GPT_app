[{"C:\\Users\\sai\\Desktop\\App\\client\\src\\index.js":"1","C:\\Users\\sai\\Desktop\\App\\client\\src\\reportWebVitals.js":"2","C:\\Users\\sai\\Desktop\\App\\client\\src\\App.js":"3","C:\\Users\\sai\\Desktop\\App\\client\\src\\theme.js":"4","C:\\Users\\sai\\Desktop\\App\\client\\src\\component\\Navbar.js":"5","C:\\Users\\sai\\Desktop\\App\\client\\src\\pages\\Homepage.js":"6","C:\\Users\\sai\\Desktop\\App\\client\\src\\pages\\Register.js":"7","C:\\Users\\sai\\Desktop\\App\\client\\src\\pages\\Login.js":"8","C:\\Users\\sai\\Desktop\\App\\client\\src\\pages\\Summary.js":"9","C:\\Users\\sai\\Desktop\\App\\client\\src\\pages\\JsConverter.js":"10","C:\\Users\\sai\\Desktop\\App\\client\\src\\pages\\Paragraph.js":"11","C:\\Users\\sai\\Desktop\\App\\client\\src\\pages\\ScifiImage.js":"12","C:\\Users\\sai\\Desktop\\App\\client\\src\\pages\\ChatBot.js":"13"},{"size":628,"mtime":1685289034615,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1685265416143,"results":"16","hashOfConfig":"15"},{"size":1461,"mtime":1686218558544,"results":"17","hashOfConfig":"18"},{"size":1589,"mtime":1685290865072,"results":"19","hashOfConfig":"15"},{"size":1516,"mtime":1686216001575,"results":"20","hashOfConfig":"18"},{"size":5186,"mtime":1686216688071,"results":"21","hashOfConfig":"18"},{"size":2832,"mtime":1686158505025,"results":"22","hashOfConfig":"18"},{"size":2565,"mtime":1686158513542,"results":"23","hashOfConfig":"18"},{"size":3265,"mtime":1686217610818,"results":"24","hashOfConfig":"18"},{"size":3328,"mtime":1686230489668,"results":"25","hashOfConfig":"18"},{"size":3269,"mtime":1686230565368,"results":"26","hashOfConfig":"18"},{"size":3343,"mtime":1686230508744,"results":"27","hashOfConfig":"18"},{"size":3237,"mtime":1686218528950,"results":"28","hashOfConfig":"18"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v0rz3s",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"b21dh",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\sai\\Desktop\\App\\client\\src\\index.js",[],[],"C:\\Users\\sai\\Desktop\\App\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\sai\\Desktop\\App\\client\\src\\App.js",[],[],[],"C:\\Users\\sai\\Desktop\\App\\client\\src\\theme.js",[],[],"C:\\Users\\sai\\Desktop\\App\\client\\src\\component\\Navbar.js",[],[],"C:\\Users\\sai\\Desktop\\App\\client\\src\\pages\\Homepage.js",[],[],[],"C:\\Users\\sai\\Desktop\\App\\client\\src\\pages\\Register.js",[],[],"C:\\Users\\sai\\Desktop\\App\\client\\src\\pages\\Login.js",[],[],"C:\\Users\\sai\\Desktop\\App\\client\\src\\pages\\Summary.js",["74","75"],[],"import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport toast from \"react-hot-toast\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  useTheme,\r\n  useMediaQuery,\r\n  TextField,\r\n  Button,\r\n  Alert,\r\n  Collapse,\r\n  Card,\r\n} from \"@mui/material\";\r\n\r\nconst Summary = () => {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  //media\r\n  const isNotMobile = useMediaQuery(\"(min-width: 1000px)\");\r\n  // states\r\n  const [text, settext] = useState(\"\");\r\n  const [summary, setSummary] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  //register ctrl\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await axios.post(\"http://localhost:5000/api/v1/openai/summary\", { text });\r\n      console.log(data);\r\n      setSummary(data);\r\n    } catch (err) {\r\n      console.log(error);\r\n      if (err.response.data.error) {\r\n        setError(err.response.data.error);\r\n      } else if (err.message) {\r\n        setError(err.message);\r\n      }\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n  return (\r\n    <Box\r\n      width={isNotMobile ? \"40%\" : \"80%\"}\r\n      p={\"2rem\"}\r\n      m={\"2rem auto\"}\r\n      borderRadius={5}\r\n      sx={{ boxShadow: 5 }}\r\n      backgroundColor={theme.palette.background.alt}\r\n    >\r\n      <Collapse in={error}>\r\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n          {error}\r\n        </Alert>\r\n      </Collapse>\r\n      <form onSubmit={handleSubmit}>\r\n        <Typography variant=\"h3\">Summarize Text</Typography>\r\n\r\n        <TextField\r\n          placeholder=\"add your text\"\r\n          type=\"text\"\r\n          multiline={true}\r\n          required\r\n          margin=\"normal\"\r\n          fullWidth\r\n          value={text}\r\n          onChange={(e) => {\r\n            settext(e.target.value);\r\n          }}\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          sx={{ color: \"white\", mt: 2 }}\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Typography mt={2}>\r\n          not this tool ? <Link to=\"/\">GO BACK</Link>\r\n        </Typography>\r\n      </form>\r\n\r\n      {summary ? (\r\n        <Card\r\n          sx={{\r\n            mt: 4,\r\n            border: 1,\r\n            boxShadow: 0,\r\n            height: \"500px\",\r\n            borderRadius: 5,\r\n            borderColor: \"natural.medium\",\r\n            bgcolor: \"background.default\",\r\n          }}\r\n        >\r\n          <Typography p={2}>{summary}</Typography>\r\n        </Card>\r\n      ) : (\r\n        <Card\r\n          sx={{\r\n            mt: 4,\r\n            border: 1,\r\n            boxShadow: 0,\r\n            height: \"500px\",\r\n            borderRadius: 5,\r\n            borderColor: \"natural.medium\",\r\n            bgcolor: \"background.default\",\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"h5\"\r\n            color=\"natural.main\"\r\n            sx={{\r\n              textAlign: \"center\",\r\n              verticalAlign: \"middel\",\r\n              lineHeight: \"450px\",\r\n            }}\r\n          >\r\n            Summary Will Appear Here\r\n          </Typography>\r\n        </Card>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Summary;","C:\\Users\\sai\\Desktop\\App\\client\\src\\pages\\JsConverter.js",["76","77"],[],"import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport toast from \"react-hot-toast\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  useTheme,\r\n  useMediaQuery,\r\n  TextField,\r\n  Button,\r\n  Alert,\r\n  Collapse,\r\n  Card,\r\n} from \"@mui/material\";\r\n\r\nconst JsConverter = () => {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  //media\r\n  const isNotMobile = useMediaQuery(\"(min-width: 1000px)\");\r\n  // states\r\n  const [text, settext] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  //register ctrl\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await axios.post(\"/api/v1/openai/js-converter\", {\r\n        text,\r\n      });\r\n      console.log(data);\r\n      setCode(data);\r\n    } catch (err) {\r\n      console.log(error);\r\n      if (err.response.data.error) {\r\n        setError(err.response.data.error);\r\n      } else if (err.message) {\r\n        setError(err.message);\r\n      }\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n  return (\r\n    <Box\r\n      width={isNotMobile ? \"40%\" : \"80%\"}\r\n      p={\"2rem\"}\r\n      m={\"2rem auto\"}\r\n      borderRadius={5}\r\n      sx={{ boxShadow: 5 }}\r\n      backgroundColor={theme.palette.background.alt}\r\n    >\r\n      <Collapse in={error}>\r\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n          {error}\r\n        </Alert>\r\n      </Collapse>\r\n      <form onSubmit={handleSubmit}>\r\n        <Typography variant=\"h3\">JS Converter</Typography>\r\n\r\n        <TextField\r\n          placeholder=\"add your text\"\r\n          type=\"text\"\r\n          multiline={true}\r\n          required\r\n          margin=\"normal\"\r\n          fullWidth\r\n          value={text}\r\n          onChange={(e) => {\r\n            settext(e.target.value);\r\n          }}\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          sx={{ color: \"white\", mt: 2 }}\r\n        >\r\n          Convert\r\n        </Button>\r\n        <Typography mt={2}>\r\n          not this tool ? <Link to=\"/\">GO BACK</Link>\r\n        </Typography>\r\n      </form>\r\n\r\n      {code ? (\r\n        <Card\r\n          sx={{\r\n            mt: 4,\r\n            border: 1,\r\n            boxShadow: 0,\r\n            height: \"500px\",\r\n            borderRadius: 5,\r\n            borderColor: \"natural.medium\",\r\n            bgcolor: \"background.default\",\r\n            overflow: \"auto\",\r\n          }}\r\n        >\r\n          <pre>\r\n            <Typography p={2}>{code}</Typography>\r\n          </pre>\r\n        </Card>\r\n      ) : (\r\n        <Card\r\n          sx={{\r\n            mt: 4,\r\n            border: 1,\r\n            boxShadow: 0,\r\n            height: \"500px\",\r\n            borderRadius: 5,\r\n            borderColor: \"natural.medium\",\r\n            bgcolor: \"background.default\",\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"h5\"\r\n            color=\"natural.main\"\r\n            sx={{\r\n              textAlign: \"center\",\r\n              verticalAlign: \"middel\",\r\n              lineHeight: \"450px\",\r\n            }}\r\n          >\r\n            Your Code Will Appear Here\r\n          </Typography>\r\n        </Card>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default JsConverter;",[],"C:\\Users\\sai\\Desktop\\App\\client\\src\\pages\\Paragraph.js",["78","79"],[],"import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport toast from \"react-hot-toast\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  useTheme,\r\n  useMediaQuery,\r\n  TextField,\r\n  Button,\r\n  Alert,\r\n  Collapse,\r\n  Card,\r\n} from \"@mui/material\";\r\n\r\nconst Paragraph = () => {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  //media\r\n  const isNotMobile = useMediaQuery(\"(min-width: 1000px)\");\r\n  // states\r\n  const [text, settext] = useState(\"\");\r\n  const [para, setPara] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  //register ctrl\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await axios.post(\"http://localhost:5000/api/v1/openai/paragraph\", { text });\r\n      console.log(data);\r\n      setPara(data);\r\n    } catch (err) {\r\n      console.log(error);\r\n      if (err.response.data.error) {\r\n        setError(err.response.data.error);\r\n      } else if (err.message) {\r\n        setError(err.message);\r\n      }\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n  return (\r\n    <Box\r\n      width={isNotMobile ? \"40%\" : \"80%\"}\r\n      p={\"2rem\"}\r\n      m={\"2rem auto\"}\r\n      borderRadius={5}\r\n      sx={{ boxShadow: 5 }}\r\n      backgroundColor={theme.palette.background.alt}\r\n    >\r\n      <Collapse in={error}>\r\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n          {error}\r\n        </Alert>\r\n      </Collapse>\r\n      <form onSubmit={handleSubmit}>\r\n        <Typography variant=\"h3\">Generate Paragraph</Typography>\r\n\r\n        <TextField\r\n          placeholder=\"add your text\"\r\n          type=\"text\"\r\n          multiline={true}\r\n          required\r\n          margin=\"normal\"\r\n          fullWidth\r\n          value={text}\r\n          onChange={(e) => {\r\n            settext(e.target.value);\r\n          }}\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          sx={{ color: \"white\", mt: 2 }}\r\n        >\r\n          Generate\r\n        </Button>\r\n        <Typography mt={2}>\r\n          not this tool ? <Link to=\"/\">GO BACK</Link>\r\n        </Typography>\r\n      </form>\r\n\r\n      {para ? (\r\n        <Card\r\n          sx={{\r\n            mt: 4,\r\n            border: 1,\r\n            boxShadow: 0,\r\n            height: \"500px\",\r\n            borderRadius: 5,\r\n            borderColor: \"natural.medium\",\r\n            bgcolor: \"background.default\",\r\n          }}\r\n        >\r\n          <Typography p={2}>{para}</Typography>\r\n        </Card>\r\n      ) : (\r\n        <Card\r\n          sx={{\r\n            mt: 4,\r\n            border: 1,\r\n            boxShadow: 0,\r\n            height: \"500px\",\r\n            borderRadius: 5,\r\n            borderColor: \"natural.medium\",\r\n            bgcolor: \"background.default\",\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"h5\"\r\n            color=\"natural.main\"\r\n            sx={{\r\n              textAlign: \"center\",\r\n              verticalAlign: \"middel\",\r\n              lineHeight: \"450px\",\r\n            }}\r\n          >\r\n            Your Paragraph Will Appear Here\r\n          </Typography>\r\n        </Card>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Paragraph;","C:\\Users\\sai\\Desktop\\App\\client\\src\\pages\\ScifiImage.js",["80","81"],[],"C:\\Users\\sai\\Desktop\\App\\client\\src\\pages\\ChatBot.js",["82","83"],[],{"ruleId":"84","severity":1,"message":"85","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":13},{"ruleId":"84","severity":1,"message":"88","line":19,"column":9,"nodeType":"86","messageId":"87","endLine":19,"endColumn":17},{"ruleId":"84","severity":1,"message":"85","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":13},{"ruleId":"84","severity":1,"message":"88","line":19,"column":9,"nodeType":"86","messageId":"87","endLine":19,"endColumn":17},{"ruleId":"84","severity":1,"message":"85","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":13},{"ruleId":"84","severity":1,"message":"88","line":19,"column":9,"nodeType":"86","messageId":"87","endLine":19,"endColumn":17},{"ruleId":"84","severity":1,"message":"85","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":13},{"ruleId":"84","severity":1,"message":"88","line":19,"column":9,"nodeType":"86","messageId":"87","endLine":19,"endColumn":17},{"ruleId":"84","severity":1,"message":"85","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":13},{"ruleId":"84","severity":1,"message":"88","line":19,"column":9,"nodeType":"86","messageId":"87","endLine":19,"endColumn":17},"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used."]